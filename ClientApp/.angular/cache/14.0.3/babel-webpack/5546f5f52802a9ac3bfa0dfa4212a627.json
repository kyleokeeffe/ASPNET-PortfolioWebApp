{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../project-item/project-item.component\";\n\nfunction ProjectsComponent_app_project_item_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-project-item\", 14);\n  }\n\n  if (rf & 2) {\n    const projectItem_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"projectItem\", projectItem_r1);\n  }\n}\n\nexport let ProjectsComponent = /*#__PURE__*/(() => {\n  class ProjectsComponent {\n    constructor() {\n      this.projectItemList = [{\n        id: 0,\n        name: 'Student Records Application',\n        type: 'statndalone',\n        language: 'csharp',\n        description: 'Software to record, access and manage the academic records for multiple users. Developed using C# WPF GUI interface.',\n        photo: '../../assets/images/studentTracking.PNG',\n        link: 'http://www.google.ca'\n      }, {\n        id: 1,\n        name: 'Customer Service Chatbot SRS',\n        type: 'SRS',\n        language: 'UML',\n        description: 'Contributed to development of software requirements documentation for a chatbot browser add-on.',\n        photo: '../../assets/images/chatBotDiagram.png',\n        link: 'http://www.google.ca'\n      }, {\n        id: 2,\n        name: 'Quiz Simulation',\n        type: 'standalone',\n        language: 'Java',\n        description: 'Software for simulating a quiz. Developed using Java with JOptionsPane GUI interface.',\n        photo: '../../assets/images/quizSimulation.png',\n        link: 'http://www.google.ca'\n      }, {\n        id: 3,\n        name: 'Natural Language Image Processing',\n        type: 'standalone',\n        language: 'python',\n        description: 'Python command-line software for conducting image editing operations from natural language requests.',\n        photo: '../../assets/images/logo.png',\n        link: 'http://www.google.ca'\n      }, {\n        id: 4,\n        name: 'Publisher Pattern Implmentation',\n        type: 'standalone',\n        language: 'csharp',\n        description: 'C# software implementing Publisher pattern in WPF.',\n        photo: '../../assets/images/logo.png',\n        link: 'http://www.google.ca'\n      }, {\n        id: 5,\n        name: 'Personal Portfolio Website',\n        type: 'webapp',\n        language: 'angular',\n        description: 'Portfolio website implemented using multiple frameworks. Currently completed frameworks: EJS, Angular/ASP.NET.',\n        photo: '../../assets/images/chatBotDiagram.png',\n        link: 'http://www.google.ca'\n      }, {\n        id: 6,\n        name: 'Regression Test Automation Software',\n        type: 'standalone',\n        language: 'java',\n        description: 'Standalone Java software for QA regression testing automation.',\n        photo: '../../assets/images/logo.png',\n        link: 'http://www.google.ca'\n      }];\n      this.selectedProjType = \"all\";\n      this.selectedLang = \"all\";\n      this.projectItemListFilt = this.projectItemList;\n    }\n\n    ngOnInit() {}\n\n    valueSelected() {\n      if (this.selectedLang == \"all\" && this.selectedProjType == \"all\") {\n        this.projectItemListFilt = this.projectItemList;\n      } else if (this.selectedLang == \"all\" && this.selectedProjType != \"all\") {\n        this.projectItemListFilt = this.projectItemList.filter(item => item.type == this.selectedProjType);\n      } else if (this.selectedLang != \"all\" && this.selectedProjType == \"all\") {\n        this.projectItemListFilt = this.projectItemList.filter(item => item.language == this.selectedLang);\n      } else {\n        this.projectItemListFilt = this.projectItemList.filter(item => item.language == this.selectedLang).filter(item => item.type == this.selectedProjType);\n      }\n    }\n\n  }\n\n  ProjectsComponent.ɵfac = function ProjectsComponent_Factory(t) {\n    return new (t || ProjectsComponent)();\n  };\n\n  ProjectsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectsComponent,\n    selectors: [[\"app-projects\"]],\n    decls: 29,\n    vars: 5,\n    consts: [[1, \"container\"], [\"for\", \"slctType\"], [0, \"x\", \"Name\", \"slctType\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"all\"], [\"value\", \"webapp\"], [\"value\", \"standalone\"], [\"for\", \"slctLang\"], [0, \"x\", \"Name\", \"slctLang\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"csharp\"], [\"value\", \"java\"], [\"value\", \"python\"], [\"value\", \"uml\"], [1, \"card-deck\", \"d-sm-flex\", \"flex-sm-row\", \"align-content-around\", \"justify-content-center\"], [3, \"projectItem\", 4, \"ngFor\", \"ngForOf\"], [3, \"projectItem\"]],\n    template: function ProjectsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Project Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(3, \"\\\" \");\n        i0.ɵɵelementStart(4, \"select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectsComponent_Template_select_ngModelChange_4_listener($event) {\n          return ctx.selectedProjType = $event;\n        })(\"change\", function ProjectsComponent_Template_select_change_4_listener() {\n          return ctx.valueSelected();\n        });\n        i0.ɵɵelementStart(5, \"option\", 3);\n        i0.ɵɵtext(6, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"option\", 4);\n        i0.ɵɵtext(8, \"Web App\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"option\", 5);\n        i0.ɵɵtext(10, \"Stand Alone App\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Language\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectsComponent_Template_select_ngModelChange_13_listener($event) {\n          return ctx.selectedLang = $event;\n        })(\"change\", function ProjectsComponent_Template_select_change_13_listener() {\n          return ctx.valueSelected();\n        });\n        i0.ɵɵelementStart(14, \"option\", 3);\n        i0.ɵɵtext(15, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 8);\n        i0.ɵɵtext(17, \"C#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 9);\n        i0.ɵɵtext(19, \"Java\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 10);\n        i0.ɵɵtext(21, \"Python\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"option\", 11);\n        i0.ɵɵtext(23, \"UML\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 12);\n        i0.ɵɵtemplate(27, ProjectsComponent_app_project_item_27_Template, 1, 1, \"app-project-item\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"div\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedProjType);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedLang);\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate2(\" Proj type: \", ctx.selectedProjType, \" lang: \", ctx.selectedLang, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projectItemListFilt);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.ProjectItemComponent],\n    styles: [\".flex-sm-row[_ngcontent-%COMP%]{width:100%;height:200%;flex-wrap:wrap}\"]\n  });\n  return ProjectsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}