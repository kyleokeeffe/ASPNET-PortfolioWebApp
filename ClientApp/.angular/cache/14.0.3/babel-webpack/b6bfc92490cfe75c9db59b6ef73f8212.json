{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let RepositoryService = /*#__PURE__*/(() => {\n  class RepositoryService {\n    constructor() {\n      this.projectItemList = [{\n        id: 0,\n        name: 'Student Records Application',\n        type: 'Standalone',\n        language: 'CSharp',\n        description: 'Software to record, access and manage the academic records for multiple users. Developed using C# WPF GUI interface.',\n        photo: '../../assets/images/studentTracking.PNG',\n        link: 'https://github.com/kyleokeeffe/CSharp-Sem2-StudentAccountTracking'\n      }, {\n        id: 1,\n        name: 'Customer Service Chatbot SRS',\n        type: 'SRS',\n        language: 'UML',\n        description: 'Contributed to development of software requirements documentation for a chatbot browser add-on.',\n        photo: '../../assets/images/chatBotDiagram.png',\n        link: ''\n      }, {\n        id: 2,\n        name: 'Quiz Simulation',\n        type: 'Standalone',\n        language: 'Java',\n        description: 'Software for simulating a quiz. Developed using Java with JOptionsPane GUI interface.',\n        photo: '../../assets/images/quizSimulation.png',\n        link: 'https://github.com/kyleokeeffe/Java-Sem3-JavaProgLab2'\n      }, {\n        id: 3,\n        name: 'Natural Language Image Processing',\n        type: 'Standalone',\n        language: 'Python',\n        description: 'Python command-line software for conducting image editing operations from natural language requests.',\n        photo: '../../assets/images/logo.png',\n        link: 'https://github.com/kyleokeeffe/NaturalLanguageImageProc'\n      }, {\n        id: 4,\n        name: 'Publisher Pattern Implementation',\n        type: 'Standalone',\n        language: 'CSharp',\n        description: 'C# software implementing Publisher pattern in WPF.',\n        photo: '../../assets/images/logo.png',\n        link: 'https://github.com/kyleokeeffe/Publisher-CSharp'\n      }, {\n        id: 5,\n        name: 'Personal Portfolio Website',\n        type: 'WebApp',\n        language: 'EJS',\n        description: 'Early iteration of this website implemented using EJS.',\n        photo: '../../assets/images/chatBotDiagram.png',\n        link: 'https://github.com/kyleokeeffe/NodeJS-Sem3-ExpressPorfolio'\n      }, {\n        id: 6,\n        name: 'Regression Test Automation Software',\n        type: 'Standalone',\n        language: 'Java',\n        description: 'Standalone Java software for QA regression testing automation.',\n        photo: '../../assets/images/logo.png',\n        link: ''\n      }, {\n        id: 7,\n        name: 'Personal Portfolio Website',\n        type: 'WebApp',\n        language: 'CSharp',\n        description: 'ASP.NET/Angular implementation of this website.',\n        photo: '../../assets/images/logo.png',\n        link: 'https://github.com/kyleokeeffe/PortfolioWebApp'\n      }];\n    }\n\n    getProjects() {\n      return this.projectItemList;\n    }\n\n    getProject(id) {\n      return this.projectItemList.find(x => x.id == +id);\n    }\n\n  }\n\n  RepositoryService.ɵfac = function RepositoryService_Factory(t) {\n    return new (t || RepositoryService)();\n  };\n\n  RepositoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RepositoryService,\n    factory: RepositoryService.ɵfac,\n    providedIn: 'root'\n  });\n  return RepositoryService;\n})();","map":null,"metadata":{},"sourceType":"module"}