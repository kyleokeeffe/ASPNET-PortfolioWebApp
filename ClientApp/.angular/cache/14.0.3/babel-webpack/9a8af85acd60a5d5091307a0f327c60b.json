{"ast":null,"code":"import { RepositoryService } from '../appServices/repository.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../appServices/project.service\";\nimport * as i3 from \"../appServices/repository.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../project-item/project-item.component\";\n\nfunction ProjectsComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r3, \" \");\n  }\n}\n\nfunction ProjectsComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r4, \" \");\n  }\n}\n\nfunction ProjectsComponent_app_project_item_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-project-item\", 9);\n  }\n\n  if (rf & 2) {\n    const projectItem_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"projectItem\", projectItem_r5);\n  }\n}\n\nexport let ProjectsComponent = /*#__PURE__*/(() => {\n  class ProjectsComponent {\n    constructor(route, projectService, repo) {\n      this.route = route;\n      this.projectService = projectService;\n      this.repo = repo;\n      this.selectTypeOptions = [\"All\", \"WebApp\", \"Standalone\"];\n      this.selectLangOptions = [\"All\", \"CSharp\", \"Java\"];\n      this.selectedType = \"All\";\n      this.selectedLang = \"All\";\n      this.projectItemList = []; //  {\n      //    id: 0,\n      //    name: 'Student Records Application',\n      //    type: 'Standalone',\n      //    language: 'CSharp',\n      //    description: 'Software to record, access and manage the academic records for multiple users. Developed using C# WPF GUI interface.',\n      //    photo: '../../assets/images/studentTracking.PNG',\n      //    link: 'http://www.google.ca'\n      //  },\n      //  {\n      //    id: 1,\n      //    name: 'Customer Service Chatbot SRS',\n      //    type: 'SRS',\n      //    language: 'UML',\n      //    description: 'Contributed to development of software requirements documentation for a chatbot browser add-on.',\n      //    photo: '../../assets/images/chatBotDiagram.png',\n      //    link: 'http://www.google.ca'\n      //  },\n      //  {\n      //    id: 2,\n      //    name: 'Quiz Simulation',\n      //    type: 'Standalone',\n      //    language: 'Java',\n      //    description: 'Software for simulating a quiz. Developed using Java with JOptionsPane GUI interface.',\n      //    photo: '../../assets/images/quizSimulation.png',\n      //    link: 'http://www.google.ca'\n      //  },\n      //  {\n      //    id: 3,\n      //    name: 'Natural Language Image Processing',\n      //    type: 'Standalone',\n      //    language: 'Python',\n      //    description: 'Python command-line software for conducting image editing operations from natural language requests.',\n      //    photo: '../../assets/images/logo.png',\n      //    link: 'http://www.google.ca'\n      //  },\n      //  {\n      //    id: 4,\n      //    name: 'Publisher Pattern Implmentation',\n      //    type: 'Standalone',\n      //    language: 'CSharp',\n      //    description: 'C# software implementing Publisher pattern in WPF.',\n      //    photo: '../../assets/images/logo.png',\n      //    link: 'http://www.google.ca'\n      //  },\n      //  {\n      //    id: 5,\n      //    name: 'Personal Portfolio Website',\n      //    type: 'WebApp',\n      //    language: 'Angular',\n      //    description: 'Portfolio website implemented using multiple frameworks. Currently completed frameworks: EJS, Angular/ASP.NET.',\n      //    photo: '../../assets/images/chatBotDiagram.png',\n      //    link: 'http://www.google.ca'\n      //  },\n      //  {\n      //    id: 6,\n      //    name: 'Regression Test Automation Software',\n      //    type: 'Standalone',\n      //    language: 'Java',\n      //    description: 'Standalone Java software for QA regression testing automation.',\n      //    photo: '../../assets/images/logo.png',\n      //    link: 'http://www.google.ca'\n      //  }\n      //];\n\n      this.projectItemListFilt = []; // this.projectService.getProjects()\n      // .subscribe(projects => this.projectItemList = projects);\n\n      this.projectItemList = this.repo.getProjects();\n      this.projectItemListFilt = this.projectItemList;\n    }\n\n    ngOnInit() {\n      var filterValue = this.route.snapshot.paramMap.get(\"filter\");\n\n      if (filterValue) {\n        this.selectedType = filterValue;\n        this.valueSelected();\n      }\n    }\n\n    updateTypeSelect(e) {\n      this.selectedType = e.target.value;\n      this.valueSelected();\n    }\n\n    updateLangSelect(e) {\n      this.selectedLang = e.target.value;\n      this.valueSelected();\n    }\n\n    valueSelected() {\n      if (this.selectedType == \"All\" && this.selectedLang == \"All\") {\n        this.projectItemListFilt = this.projectItemList;\n      } else if (this.selectedLang == \"All\" && this.selectedType != \"All\") {\n        this.projectItemListFilt = this.projectItemList.filter(item => item.type == this.selectedType);\n      } else if (this.selectedLang != \"All\" && this.selectedType == \"All\") {\n        this.projectItemListFilt = this.projectItemList.filter(item => item.language == this.selectedLang);\n      } else {\n        this.projectItemListFilt = this.projectItemList.filter(item => item.language == this.selectedLang).filter(item => item.type == this.selectedType);\n      }\n    }\n\n  }\n\n  ProjectsComponent.ɵfac = function ProjectsComponent_Factory(t) {\n    return new (t || ProjectsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProjectService), i0.ɵɵdirectiveInject(i3.RepositoryService));\n  };\n\n  ProjectsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectsComponent,\n    selectors: [[\"app-projects\"]],\n    features: [i0.ɵɵProvidersFeature([RepositoryService])],\n    decls: 13,\n    vars: 5,\n    consts: [[1, \"container\", \"w-100\"], [\"for\", \"slctType\"], [0, \"x\", \"Name\", \"slctType\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"slctLang\"], [0, \"x\", \"Name\", \"slctLang\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"card-deck\", \"w-100\", \"d-flex\", \"flex-wrap\", \"align-content-around\", \"justify-content-center\"], [\"class\", \"card\", 3, \"projectItem\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"card\", 3, \"projectItem\"]],\n    template: function ProjectsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Project Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(3, \"\\\" \");\n        i0.ɵɵelementStart(4, \"select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectsComponent_Template_select_ngModelChange_4_listener($event) {\n          return ctx.selectedType = $event;\n        })(\"change\", function ProjectsComponent_Template_select_change_4_listener($event) {\n          return ctx.updateTypeSelect($event);\n        });\n        i0.ɵɵtemplate(5, ProjectsComponent_option_5_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Language\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectsComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.selectedLang = $event;\n        })(\"change\", function ProjectsComponent_Template_select_change_8_listener($event) {\n          return ctx.updateLangSelect($event);\n        });\n        i0.ɵɵtemplate(9, ProjectsComponent_option_9_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵtemplate(11, ProjectsComponent_app_project_item_11_Template, 1, 1, \"app-project-item\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"div\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.selectTypeOptions);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedLang);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.selectLangOptions);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projectItemListFilt);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel, i6.ProjectItemComponent],\n    styles: [\".flex-sm-row[_ngcontent-%COMP%]{width:100%;height:200%;flex-wrap:wrap}.card[_ngcontent-%COMP%]{color:#655844;background-color:#370075;margin:.5rem;width:18rem;height:17rem}.card-deck[_ngcontent-%COMP%]{padding:10px}\"]\n  });\n  return ProjectsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}